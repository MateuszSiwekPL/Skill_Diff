//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Inputs/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""7ac887db-a465-454b-b2fb-3326e37409e8"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""586e149d-d6b8-4212-95d9-a880f9c4f482"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Running"",
                    ""type"": ""PassThrough"",
                    ""id"": ""be684dd0-4a0f-452d-8c19-eaab9ab0a5a4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jumping"",
                    ""type"": ""PassThrough"",
                    ""id"": ""108603d1-bd21-4e7e-928a-e913f36ab1fa"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DoubleJump"",
                    ""type"": ""Button"",
                    ""id"": ""44351bef-7183-45db-86e5-7d12c3a348ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightDashing"",
                    ""type"": ""Button"",
                    ""id"": ""9e73d6a3-3c48-4f29-9035-8d21788950c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftDashing"",
                    ""type"": ""Button"",
                    ""id"": ""254d6810-dfbe-4b8f-9198-79c52b8eb491"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shooting"",
                    ""type"": ""Button"",
                    ""id"": ""ce7f7cdd-8834-42ec-9d1d-e8be37f4254d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownDashing"",
                    ""type"": ""Button"",
                    ""id"": ""b7d6c1aa-c4dd-4d63-ab29-0d5dd35211f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlashAttack"",
                    ""type"": ""Button"",
                    ""id"": ""159d35bb-a73d-4766-87d6-bd4a971a5c2f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e18d58cf-78dc-4942-8a26-ae6ac6586aef"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""edcb1e87-810c-4d6a-acd5-b1c925789e01"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a133af40-2415-4fce-8e75-4e85fad66f0f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""859f7d1c-f3c8-4f07-9ebc-717d299da74a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""88c40d36-d1a2-4f35-bdf2-d09a144a3269"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cc52dd89-76ce-4c43-aa6c-25c903e46d1c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2ea1f32e-7cea-4e55-86a6-57a0b68f929a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jumping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca9a4efd-2b84-4946-979e-025824037e98"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DoubleJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e64b24d4-ba5e-46d6-8c88-0919351c9641"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDashing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f2c5127-dee2-4e08-83c1-adcfd2ade056"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDashing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ffd4960-9614-4c69-8b6a-d36cfbf2b3a9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shooting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""238dcfc2-fadd-4a3a-986c-0d0367840322"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownDashing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a68f8bc5-6a85-4e10-a31f-3998775d388b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlashAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Running = m_Player.FindAction("Running", throwIfNotFound: true);
        m_Player_Jumping = m_Player.FindAction("Jumping", throwIfNotFound: true);
        m_Player_DoubleJump = m_Player.FindAction("DoubleJump", throwIfNotFound: true);
        m_Player_RightDashing = m_Player.FindAction("RightDashing", throwIfNotFound: true);
        m_Player_LeftDashing = m_Player.FindAction("LeftDashing", throwIfNotFound: true);
        m_Player_Shooting = m_Player.FindAction("Shooting", throwIfNotFound: true);
        m_Player_DownDashing = m_Player.FindAction("DownDashing", throwIfNotFound: true);
        m_Player_SlashAttack = m_Player.FindAction("SlashAttack", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Running;
    private readonly InputAction m_Player_Jumping;
    private readonly InputAction m_Player_DoubleJump;
    private readonly InputAction m_Player_RightDashing;
    private readonly InputAction m_Player_LeftDashing;
    private readonly InputAction m_Player_Shooting;
    private readonly InputAction m_Player_DownDashing;
    private readonly InputAction m_Player_SlashAttack;
    public struct PlayerActions
    {
        private @PlayerInputs m_Wrapper;
        public PlayerActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Running => m_Wrapper.m_Player_Running;
        public InputAction @Jumping => m_Wrapper.m_Player_Jumping;
        public InputAction @DoubleJump => m_Wrapper.m_Player_DoubleJump;
        public InputAction @RightDashing => m_Wrapper.m_Player_RightDashing;
        public InputAction @LeftDashing => m_Wrapper.m_Player_LeftDashing;
        public InputAction @Shooting => m_Wrapper.m_Player_Shooting;
        public InputAction @DownDashing => m_Wrapper.m_Player_DownDashing;
        public InputAction @SlashAttack => m_Wrapper.m_Player_SlashAttack;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Running.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRunning;
                @Running.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRunning;
                @Running.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRunning;
                @Jumping.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJumping;
                @Jumping.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJumping;
                @Jumping.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJumping;
                @DoubleJump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDoubleJump;
                @DoubleJump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDoubleJump;
                @DoubleJump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDoubleJump;
                @RightDashing.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDashing;
                @RightDashing.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDashing;
                @RightDashing.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDashing;
                @LeftDashing.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDashing;
                @LeftDashing.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDashing;
                @LeftDashing.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDashing;
                @Shooting.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShooting;
                @Shooting.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShooting;
                @Shooting.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShooting;
                @DownDashing.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownDashing;
                @DownDashing.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownDashing;
                @DownDashing.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownDashing;
                @SlashAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlashAttack;
                @SlashAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlashAttack;
                @SlashAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlashAttack;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Running.started += instance.OnRunning;
                @Running.performed += instance.OnRunning;
                @Running.canceled += instance.OnRunning;
                @Jumping.started += instance.OnJumping;
                @Jumping.performed += instance.OnJumping;
                @Jumping.canceled += instance.OnJumping;
                @DoubleJump.started += instance.OnDoubleJump;
                @DoubleJump.performed += instance.OnDoubleJump;
                @DoubleJump.canceled += instance.OnDoubleJump;
                @RightDashing.started += instance.OnRightDashing;
                @RightDashing.performed += instance.OnRightDashing;
                @RightDashing.canceled += instance.OnRightDashing;
                @LeftDashing.started += instance.OnLeftDashing;
                @LeftDashing.performed += instance.OnLeftDashing;
                @LeftDashing.canceled += instance.OnLeftDashing;
                @Shooting.started += instance.OnShooting;
                @Shooting.performed += instance.OnShooting;
                @Shooting.canceled += instance.OnShooting;
                @DownDashing.started += instance.OnDownDashing;
                @DownDashing.performed += instance.OnDownDashing;
                @DownDashing.canceled += instance.OnDownDashing;
                @SlashAttack.started += instance.OnSlashAttack;
                @SlashAttack.performed += instance.OnSlashAttack;
                @SlashAttack.canceled += instance.OnSlashAttack;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnRunning(InputAction.CallbackContext context);
        void OnJumping(InputAction.CallbackContext context);
        void OnDoubleJump(InputAction.CallbackContext context);
        void OnRightDashing(InputAction.CallbackContext context);
        void OnLeftDashing(InputAction.CallbackContext context);
        void OnShooting(InputAction.CallbackContext context);
        void OnDownDashing(InputAction.CallbackContext context);
        void OnSlashAttack(InputAction.CallbackContext context);
    }
}
